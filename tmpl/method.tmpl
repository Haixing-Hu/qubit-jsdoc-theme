<?js
var data = obj;
var self = this;

?>
<?js
    // Check if this is a class with an explicit constructor
    var hasExplicitConstructor = false;
    if (data.kind === 'class') {
        // Only show constructor if:
        // 1. Has constructor parameters OR
        // 2. Has constructor-specific description (different from class description) OR
        // 3. Has constructor-specific examples/see/since AND also has params or different description

        var hasConstructorParams = data.params && data.params.length > 0;
        var hasConstructorSpecificDescription = data.description &&
                                              data.description !== data.classdesc &&
                                              data.description.trim() !== '';

        // For MixIn classes and similar patterns, avoid showing constructor
        // unless there are clear constructor-specific elements
        hasExplicitConstructor = hasConstructorParams || hasConstructorSpecificDescription;
    }
?>
<?js if (data.kind !== 'module' && !data.hideconstructor) { ?>
    <?js if (data.kind === 'class' && data.classdesc && hasExplicitConstructor) { ?>
        <h2 id="constructor" class="has-anchor"><?js= t('constructor') ?></h2>
    <?js } ?>

    <?js if (data.kind !== 'class' || hasExplicitConstructor) { ?>
        <h3 class="name has-anchor" id="<?js= id ?>">
            <?js= data.attribs + (kind === 'class' ? 'new ' : '') + name + (data.signature || '') ?>
        </h3>
    <?js } ?>

    <?js if (data.summary) { ?>
        <div class="summary"><?js= summary ?></div>
    <?js } ?>
<?js } ?>

<?js if (data.kind !== 'module' && data.description) { ?>
    <div class="description">
        <?js= data.description ?>
    </div>
<?js } ?>

<?js if (data.augments && data.alias && data.alias.indexOf('module:') === 0) { ?>
    <div class="method-member-container mt-20">
    <strong><?js= t('extends') ?>:</strong>
    <?js= self.partial('augments.tmpl', data) ?>
    </div>
<?js } ?>


<?js if (kind === 'event' && data.type && data.type.names) {?>
    <div class="method-member-container mt-20">
    <strong><?js= t('type') ?>:</strong>
    <ul>
        <li>
            <?js= self.partial('type.tmpl', data.type.names) ?>
        </li>
    </ul>
    </div>
<?js } ?>

<?js if (data['this']) { ?>
    <div class="method-member-container mt-20">
    <strong><?js= t('this') ?>:</strong>
    <ul><li><?js= this.linkto(data['this'], data['this']) ?></li></ul>
    </div>
<?js } ?>

<?js if (data.params && params.length && !data.hideconstructor) { ?>
    <div class="method-member-container flex flex-col w-100 overflow-auto mt-20">
        <strong><?js= t('parameters') ?>:</strong>
        <?js= this.partial('params.tmpl', params) ?>
    </div>
<?js } ?>

<?js= this.partial('details.tmpl', data) ?>

<?js if (data.kind !== 'module' && data.requires && data.requires.length) { ?>
    <div class="method-member-container flex flex-col w-100 overflow-auto mt-20">
        <strong><?js= t('requires') ?>:</strong>
        <ul>
            <?js data.requires.forEach(function(r) { ?>
                <li><?js= self.linkto(r) ?></li>
            <?js }); ?>
        </ul>
    </div>
<?js } ?>

<?js if (data.fires && fires.length) { ?>
    <div class="method-member-container flex w-100 overflow-auto mt-20">
        <strong><?js= t('fires') ?>:</strong>
            <ul>
                <?js fires.forEach(function(f) { ?>
                    <li><?js= self.linkto(f) ?></li>
                <?js }); ?>
            </ul>
    </div>
<?js } ?>

<?js if (data.listens && listens.length) { ?>
    <div class="method-member-container flex w-100 overflow-auto mt-20">
        <strong><?js= t('listens_to_events') ?>:</strong>
        <ul>
            <?js listens.forEach(function(f) { ?>
                <li><?js= self.linkto(f) ?></li>
            <?js }); ?>
        </ul>
    </div>
<?js } ?>

<?js if (data.listeners && listeners.length) { ?>
    <div class="method-member-container mt-20">
    <strong><?js= t('listeners_of_this_event') ?>:</strong>
    <ul>
        <?js listeners.forEach(function(f) { ?>
            <li><?js= self.linkto(f) ?></li>
        <?js }); ?>
    </ul>
    </div>
<?js } ?>

<?js if (data.modifies && modifies.length) {?>
    <div class="method-member-container mt-20">
    <strong><?js= t('modifies') ?>:</strong>
        <?js if (modifies.length > 1) { ?>
            <ul>
                <?js modifies.forEach(function(r) { ?>
                    <li><?js= self.partial('type.tmpl', r) ?></li>
                <?js }); ?>
            </ul>

        <?js } else { modifies.forEach(function(r) { ?>
            <?js= self.partial('type.tmpl', r) ?>
            <?js });} ?>
    </div>
<?js } ?>


<?js if (data.exceptions && exceptions.length) { ?>
    <div class="method-member-container mt-20">
    <strong><?js= t('throws') ?>:</strong>
    <?js if (exceptions.length > 1) { ?>
        <ul>
            <?js exceptions.forEach(function(r) { ?>
                <li><?js= self.partial('exceptions.tmpl', r) ?></li>
            <?js }); ?>
        </ul>
    <?js } else { exceptions.forEach(function(r) { ?>
        <?js= self.partial('exceptions.tmpl', r) ?>
    <?js });} ?>
    </div>
<?js } ?>

<?js if (data.returns && returns.length) { ?>
    <div class="method-member-container mt-20">
    <strong><?js= t('returns') ?>:</strong>
        <?js if (returns.length > 1) { ?>
            <ul>
                <?js returns.forEach(function(r) { ?>
                    <li><?js= self.partial('returns.tmpl', r) ?></li>
                <?js }); ?>
            </ul>

        <?js } else { returns.forEach(function(r) { ?>
            <?js= self.partial('returns.tmpl', r) ?>
            <?js });} ?>
    </div>
<?js } ?>

<?js if (data.yields && yields.length) { ?>
    <div class="method-member-container mt-20">
    <strong><?js= t('yields') ?>:</strong>
        <?js if (yields.length > 1) { ?>
            <ul>
                <?js yields.forEach(function(r) { ?>
                    <li><?js= self.partial('returns.tmpl', r) ?></li>
                <?js }); ?>
            </ul>

        <?js } else { yields.forEach(function(r) { ?>
            <?js= self.partial('returns.tmpl', r) ?>
            <?js });} ?>
    </div>
<?js } ?>


<?js if (data.examples && examples.length) { ?>
    <div class="method-member-container flex flex-col w-100 overflow-auto mt-20">
        <strong><?js= examples.length > 1 ? t('examples') : t('example') ?></strong>
        <?js= this.partial('examples.tmpl', examples) ?>
    </div>
<?js } ?>
